package com.fuse.api.dto;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.faction.reporting.ReportFeatures;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fuse.dao.CustomField;
import com.fuse.dao.Vulnerability;

/**
 * DTO for Vulnerability API responses with backward-compatible field names
 * and support for custom fields
 */
@JsonInclude(JsonInclude.Include.NON_NULL)
public class VulnerabilityDTO {
    
    @JsonProperty("Id")
    private Long id;
    
    @JsonProperty("Name")
    private String name;
    
    @JsonProperty("Description")
    private String description;
    
    @JsonProperty("Recommendation")
    private String recommendation;
    
    @JsonProperty("Details")
    private String details;
    
    @JsonProperty("Impact")
    private Long impact;
    
    @JsonProperty("Overall")
    private Long overall;
    
    @JsonProperty("Likelyhood")
    private Long likelyhood;
    
    @JsonProperty("CvssScore")
    private String cvssScore;
    
    @JsonProperty("CvssString")
    private String cvssString;
    
    @JsonProperty("Tracking")
    private String tracking;
    
    @JsonProperty("Desc_notes")
    private String descNotes;
    
    @JsonProperty("Detail_notes")
    private String detailNotes;
    
    @JsonProperty("Rec_notes")
    private String recNotes;
    
    @JsonProperty("AssessorId")
    private Long assessorId;
    
    @JsonProperty("ImpactStr")
    private String impactStr;
    
    @JsonProperty("LikelyhoodStr")
    private String likelyhoodStr;
    
    @JsonProperty("OverallStr")
    private String overallStr;
    
    @JsonProperty("Section")
    private String section;
    
    @JsonProperty("AssessmentId")
    private Long assessmentId;
    
    @JsonProperty("Created")
    private String created;
    
    @JsonProperty("CustomFields")
    private List<CustomFieldDTO> customFields = new ArrayList<>();
    
    /**
     * Default constructor
     */
    public VulnerabilityDTO() {
    }
    
    /**
     * Factory method to create DTO from entity
     */
    public static VulnerabilityDTO fromEntity(Vulnerability vuln) {
        if (vuln == null) {
            return null;
        }
        
        VulnerabilityDTO dto = new VulnerabilityDTO();
        dto.setId(vuln.getId());
        dto.setName(vuln.getName());
        dto.setDescription(vuln.getDescription());
        dto.setRecommendation(vuln.getRecommendation());
        dto.setDetails(vuln.getDetails());
        dto.setImpact(vuln.getImpact());
        dto.setOverall(vuln.getOverall());
        dto.setLikelyhood(vuln.getLikelyhood());
        dto.setCvssScore(vuln.getCvssScore());
        dto.setCvssString(vuln.getCvssString());
        dto.setTracking(vuln.getTracking());
        dto.setDescNotes(vuln.getDesc_notes());
        dto.setDetailNotes(vuln.getDetail_notes());
        dto.setRecNotes(vuln.getRec_notes());
        
        // Set assessor ID if available
        if (vuln.getAssessorId() != null) {
            dto.setAssessorId(vuln.getAssessorId());
        }
        
        // Convert severity levels to strings
        dto.setImpactStr(getSeverityString(vuln.getImpact()));
        dto.setLikelyhoodStr(getSeverityString(vuln.getLikelyhood()));
        dto.setOverallStr(getSeverityString(vuln.getOverall()));
        
        // Set section information
        if (vuln.getSection() != null) {
            dto.setSection(vuln.getSection());
        } else {
            dto.setSection("");
        }
        
        dto.setAssessmentId(vuln.getAssessmentId());
        
        // Convert created date to string (timestamp)
        if (vuln.getCreated() != null) {
            dto.setCreated(String.valueOf(vuln.getCreated().getTime()));
        }
        
        return dto;
    }
    
    /**
     * Convert severity number to string representation
     */
    private static String getSeverityString(Long severity) {
        if (severity == null) return "Info";
        
        // Map severity levels to strings (adjust based on your risk levels)
        switch (severity.intValue()) {
            case 9:
            case 8:
                return "Critical";
            case 7:
            case 6:
                return "High";
            case 5:
            case 4:
                return "Medium";
            case 3:
            case 2:
                return "Low";
            case 1:
            case 0:
            default:
                return "Info";
        }
    }
    
    /**
     * Add custom fields from entity
     */
    public void setCustomFieldsFromEntity(List<CustomField> fields) {
        if (fields != null) {
            customFields = new ArrayList<>();
            for (CustomField field : fields) {
                CustomFieldDTO dto = CustomFieldDTO.fromEntity(field);
                if (dto != null) {
                    customFields.add(dto);
                }
            }
        }
    }
    
    public List<CustomFieldDTO> getCustomFields() {
        return customFields;
    }

    public void setCustomFields(List<CustomFieldDTO> customFields) {
        this.customFields = customFields;
    }
    
    // Getters and Setters
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getRecommendation() {
        return recommendation;
    }

    public void setRecommendation(String recommendation) {
        this.recommendation = recommendation;
    }

    public String getDetails() {
        return details;
    }

    public void setDetails(String details) {
        this.details = details;
    }

    public Long getImpact() {
        return impact;
    }

    public void setImpact(Long impact) {
        this.impact = impact;
    }

    public Long getOverall() {
        return overall;
    }

    public void setOverall(Long overall) {
        this.overall = overall;
    }

    public Long getLikelyhood() {
        return likelyhood;
    }

    public void setLikelyhood(Long likelyhood) {
        this.likelyhood = likelyhood;
    }

    public String getCvssScore() {
        return cvssScore;
    }

    public void setCvssScore(String cvssScore) {
        this.cvssScore = cvssScore;
    }

    public String getCvssString() {
        return cvssString;
    }

    public void setCvssString(String cvssString) {
        this.cvssString = cvssString;
    }

    public String getTracking() {
        return tracking;
    }

    public void setTracking(String tracking) {
        this.tracking = tracking;
    }

    public String getDescNotes() {
        return descNotes;
    }

    public void setDescNotes(String descNotes) {
        this.descNotes = descNotes;
    }

    public String getDetailNotes() {
        return detailNotes;
    }

    public void setDetailNotes(String detailNotes) {
        this.detailNotes = detailNotes;
    }

    public String getRecNotes() {
        return recNotes;
    }

    public void setRecNotes(String recNotes) {
        this.recNotes = recNotes;
    }

    public Long getAssessorId() {
        return assessorId;
    }

    public void setAssessorId(Long assessorId) {
        this.assessorId = assessorId;
    }

    public String getImpactStr() {
        return impactStr;
    }

    public void setImpactStr(String impactStr) {
        this.impactStr = impactStr;
    }

    public String getLikelyhoodStr() {
        return likelyhoodStr;
    }

    public void setLikelyhoodStr(String likelyhoodStr) {
        this.likelyhoodStr = likelyhoodStr;
    }

    public String getOverallStr() {
        return overallStr;
    }

    public void setOverallStr(String overallStr) {
        this.overallStr = overallStr;
    }

    public String getSection() {
		return this.section == null || this.section == ""? "Default" : this.section.replaceAll("_", " ");
    }

    public void setSection(String section) {
		if(section != null && ReportFeatures.allowSections()) {
			this.section = section.trim().replaceAll(" ", "_");
		}
    }

    public Long getAssessmentId() {
        return assessmentId;
    }

    public void setAssessmentId(Long assessmentId) {
        this.assessmentId = assessmentId;
    }

    public String getCreated() {
        return created;
    }

    public void setCreated(String created) {
        this.created = created;
    }
}