package com.fuse.api.dto;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fuse.dao.Category;
import com.fuse.dao.CustomField;
import com.fuse.dao.CustomType;
import com.fuse.dao.DefaultVulnerability;

/**
 * DTO for DefaultVulnerability (vulnerability templates) with custom fields support
 */
public class DefaultVulnerabilityDTO {
    
    @JsonProperty("Id")
    private Long id;
    
    @JsonProperty("Name")
    private String name;
    
    @JsonProperty("CategoryId")
    private Long categoryId;
    
    @JsonProperty("CategoryName")
    private String categoryName;
    
    @JsonProperty("Description")
    private String description;
    
    @JsonProperty("Recommendation")
    private String recommendation;
    
    @JsonProperty("SeverityId")
    private Integer severityId;
    
    @JsonProperty("LikelihoodId")
    private Integer likelihoodId;
    
    @JsonProperty("ImpactId")
    private Integer impactId;
    
    @JsonProperty("Active")
    private Boolean active;
    
    @JsonProperty("Cvss31Score")
    private String cvss31Score = "";
    
    @JsonProperty("Cvss31String")
    private String cvss31String = "";
    
    @JsonProperty("Cvss40Score")
    private String cvss40Score = "";
    
    @JsonProperty("Cvss40String")
    private String cvss40String = "";
    
    @JsonProperty("CustomFields")
    private List<CustomFieldDTO> customFields = new ArrayList<>();
    
    public DefaultVulnerabilityDTO() {}
    
    /**
     * Convert from DefaultVulnerability entity to DTO
     */
    public static DefaultVulnerabilityDTO fromEntity(DefaultVulnerability entity, List<CustomType> customTypeList) {
        DefaultVulnerabilityDTO dto = new DefaultVulnerabilityDTO();
        
        dto.setId(entity.getId());
        dto.setName(entity.getName());
        
        if (entity.getCategory() != null) {
            dto.setCategoryId(entity.getCategory().getId());
            dto.setCategoryName(entity.getCategory().getName());
        }
        
        dto.setDescription(entity.getDescription());
        dto.setRecommendation(entity.getRecommendation());
        dto.setSeverityId(entity.getOverall());
        dto.setLikelihoodId(entity.getLikelyhood());
        dto.setImpactId(entity.getImpact());
        dto.setActive(entity.getActive());
        
        // Handle null values for CVSS scores
        dto.setCvss31Score(entity.getCvss31Score() != null ? entity.getCvss31Score() : "");
        dto.setCvss31String(entity.getCvss31String() != null ? entity.getCvss31String() : "");
        dto.setCvss40Score(entity.getCvss40Score() != null ? entity.getCvss40Score() : "");
        dto.setCvss40String(entity.getCvss40String() != null ? entity.getCvss40String() : "");
        
        // Add custom fields if any
        if (entity.getCustomFields() != null) {
            dto.setCustomFieldsFromEntity(entity.getCustomFields(), customTypeList);
        }
        
        return dto;
    }
    
    /**
     * Set custom fields from entity list
     */
    public void setCustomFieldsFromEntity(List<CustomField> customFieldsList, List<CustomType> customTypesList) {
        this.customFields.clear();
        this.customFields = this.createFieldDTOs(customTypesList);
        this.updateFieldDTOs(customFields, customFieldsList);
    }
    /**
     * Creates all Available Custom Fields from Custom Types
     */
	public List<CustomFieldDTO> createFieldDTOs(List<CustomType> types){
		List<CustomFieldDTO> customFieldsDTO = new ArrayList<>();
		for(CustomType ct : types) {
			CustomFieldDTO cf = new CustomFieldDTO();
			cf.setType(ct.getTypeStr());
			cf.setKey(ct.getKey());
			cf.setVariable(ct.getVariable());
			if (ct.getFieldType() == CustomType.FieldType.BOOLEAN.getValue()) {
				cf.setValue(ct.getDefaultValue() != null ? ct.getDefaultValue() : "false");
			} else if (ct.getFieldType() == CustomType.FieldType.LIST.getValue()) {
				// For list type, use the default value or first option if available
				String defaultValue = ct.getDefaultValue();
				if (defaultValue != null && !defaultValue.trim().isEmpty()) {
					String[] optionArray = defaultValue.split(",");
					if (optionArray.length > 0) {
						cf.setValue(optionArray[0].trim());
					} else {
						cf.setValue("");
					}
				} else {
					cf.setValue("");
				}
			} else {
				// For String type, use default value or empty string
				cf.setValue(ct.getDefaultValue() != null ? ct.getDefaultValue() : "");
			}
			customFieldsDTO.add(cf);
			
		}
		return customFieldsDTO;
		
	}
	public List<CustomFieldDTO> updateFieldDTOs(List<CustomFieldDTO> fieldsDTO, List<CustomField> fields){
		for(CustomField cf : fields) {
			CustomFieldDTO fieldDTO = fieldsDTO
					.stream()
					.filter( 
							f -> 
								f.getKey().equals(cf.getType().getKey())
					).findFirst()
					.orElse(null);
			if(fieldDTO != null) {
				fieldDTO.setValue(cf.getValue());
				fieldDTO.setId(cf.getId());
			}
		}
		return fieldsDTO;
	}
    
    // Getters and setters
    
    public Long getId() {
        return id;
    }
    
    public void setId(Long id) {
        this.id = id;
    }
    
    public String getName() {
        return name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public Long getCategoryId() {
        return categoryId;
    }
    
    public void setCategoryId(Long categoryId) {
        this.categoryId = categoryId;
    }
    
    public String getCategoryName() {
        return categoryName;
    }
    
    public void setCategoryName(String categoryName) {
        this.categoryName = categoryName;
    }
    
    public String getDescription() {
        return description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }
    
    public String getRecommendation() {
        return recommendation;
    }
    
    public void setRecommendation(String recommendation) {
        this.recommendation = recommendation;
    }
    
    public Integer getSeverityId() {
        return severityId;
    }
    
    public void setSeverityId(Integer severityId) {
        this.severityId = severityId;
    }
    
    public Integer getLikelihoodId() {
        return likelihoodId;
    }
    
    public void setLikelihoodId(Integer likelihoodId) {
        this.likelihoodId = likelihoodId;
    }
    
    public Integer getImpactId() {
        return impactId;
    }
    
    public void setImpactId(Integer impactId) {
        this.impactId = impactId;
    }
    
    public Boolean getActive() {
        return active;
    }
    
    public void setActive(Boolean active) {
        this.active = active;
    }
    
    public String getCvss31Score() {
        return cvss31Score;
    }
    
    public void setCvss31Score(String cvss31Score) {
        this.cvss31Score = cvss31Score;
    }
    
    public String getCvss31String() {
        return cvss31String;
    }
    
    public void setCvss31String(String cvss31String) {
        this.cvss31String = cvss31String;
    }
    
    public String getCvss40Score() {
        return cvss40Score;
    }
    
    public void setCvss40Score(String cvss40Score) {
        this.cvss40Score = cvss40Score;
    }
    
    public String getCvss40String() {
        return cvss40String;
    }
    
    public void setCvss40String(String cvss40String) {
        this.cvss40String = cvss40String;
    }
    
    public List<CustomFieldDTO>getCustomFields() {
        return customFields;
    }
    
    public void setCustomFields(List<CustomFieldDTO> customFields) {
        this.customFields = customFields;
    }
}